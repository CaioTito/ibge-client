@page "/create-ibge"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@rendermode InteractiveAuto

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Register New Place</h3>
                    <form>
                        <div class="mb-2">
                            <label for="code"><strong>CodeIbge</strong></label>
                            <input type="code" class="form-control" placeholder="Enter your CodeIbge" @bind="_codeIbge">
                        </div>
                        <div class="mb-2">
                            <label for="state"><strong>State</strong></label>
                            <input type="state" class="form-control" placeholder="Enter your State" @bind="_state">
                        </div>
                        <div class="mb-2">
                            <label for="city"><strong>City</strong></label>
                            <input type="city" class="form-control" placeholder="Enter your City" @bind="_city">
                        </div>
                        <div class="text-center">
                            <button type="button" class="btn btn-success mt-2" @onclick="Create">
                                <Icon Name="IconName.Save" class="me-1" /> Register
                            </button>
                            <button type="button" class="btn btn-danger mt-2 me-2" @onclick="Cancel">
                                <Icon Name="IconName.ArrowLeft" class="me-1" /> Cancel
                            </button>                   
                        </div>
                        <SnackbarStack @ref="snackbarStack" Location="SnackbarStackLocation.BottomEnd" />
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string? _token;
    private string? _codeIbge;
    private string? _state;
    private string? _city;

    private string? _message;
    SnackbarStack snackbarStack = new SnackbarStack();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _token = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "token");

            if (string.IsNullOrEmpty(_token))
                NavigationManager.NavigateTo("/auth");

            StateHasChanged();
        }
    }

    public async Task Create()
    {
        try
        {
            if (string.IsNullOrEmpty(_codeIbge) || string.IsNullOrEmpty(_state) || string.IsNullOrEmpty(_city))
                return;

            var jsonBody = new
            {
                codeIbge = _codeIbge,
                state = _state,
                city = _city
            };

            var client = new RestClient();
            var request = new RestRequest(Endpoint.PostIbges.GetEnumDescription()).AddJsonBody(jsonBody);
            request.AddHeader("Authorization", $"Bearer {_token}");

            var response = await client.PostAsync(request);

            if (response.IsSuccessful)
            {
                _message = "Place created successfully ";
                await snackbarStack.PushAsync(_message, SnackbarColor.Success);

                NavigationManager.NavigateTo("/ibge");
            }

        }
        catch (Exception)
        {
            _message = "Error when creating place ";
            await snackbarStack.PushAsync(_message, SnackbarColor.Danger);
        }     
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/ibge");
    }
}
