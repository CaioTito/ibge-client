@page "/ibge"
@using IbgeClient.Models
@attribute [StreamRendering]

<PageTitle>IBGE</PageTitle>

<div class="container">
    <form class="form-inline d-flex align-items-center">
        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" @bind="@cityName">
        <button class="btn btn-outline-success" @onclick="() => GetByCityAsync(cityName)">Search</button>
    </form>
</div>

@if (_listPlaces is null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>City</th>
                <th>State</th>
                <th>CodeIbge</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _listPlaces)
            {
                <tr>
                    <td>@item.City</td>
                    <td>@item.State</td>
                    <td>@item.CodeIbge</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string? cityName;
    private List<Place> _listPlaces = new List<Place>();

    protected override async Task OnInitializedAsync()
    {
        var client = new RestClient();
        var request = new RestRequest($"https://localhost:7122/v1/ibges/state?state=SP");
        _listPlaces = await client.GetAsync<List<Place>>(request);
    }

    public async Task GetByCityAsync(string cityName)
    {
        _listPlaces.Clear();

        var client = new RestClient();
        var request = new RestRequest($"https://localhost:7122/v1/ibges/city?city={cityName}");
        _listPlaces = await client.GetAsync<List<Place>>(request);
    }
}
